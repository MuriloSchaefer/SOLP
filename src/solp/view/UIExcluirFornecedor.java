/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package solp.view;
import static java.awt.event.KeyEvent.VK_ESCAPE;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import solp.control.controladorFornecedor;
import solp.control.controladorMateriaPrima;
import solp.model.Fornecedor;
import solp.model.MateriaPrima;

/**
 *
 * @author murilo
 */
public class UIExcluirFornecedor extends javax.swing.JFrame {

    /**
     * Creates new form UIExcluirFornecedor
     */
    List<Fornecedor> lista; //cria uma lista de fornecedores
    List<MateriaPrima> listaMateriaPrima; //cria uma lista de materia prima
    public UIExcluirFornecedor() throws ClassNotFoundException, SQLException {
        initComponents();
        lista = controladorFornecedor.consultar(); //atualiza lista de fornecedores
        int n = lista.size();
        for(int i=0; i<n; i++){
            comboFornecedor.addItem(lista.get(i).getNomeFantasia()+ " - "+lista.get(i).getCnpj());
        }
        
        listaMateriaPrima = controladorMateriaPrima.consultar(1, lista.get(comboFornecedor.getSelectedIndex()).getId());
        String[] columnNames = {"Id",
            "Nome",
            "Fornecedor",
            "Unidade",
            "Valor Unt.",
            "Descrição"};
        Object[][] data = null;
        DefaultTableModel dtm = new DefaultTableModel(data, columnNames);
        
         
        n = listaMateriaPrima.size();
        for(int i=0; i<n; i++){
            Object[] linha = {listaMateriaPrima.get(i).getId().toString(), 
                              listaMateriaPrima.get(i).getNome(), 
                              listaMateriaPrima.get(i).getFornecedor().getRazaoSocial(),
                              listaMateriaPrima.get(i).getUnd(),
                              listaMateriaPrima.get(i).getValorUnd(),
                              listaMateriaPrima.get(i).getDescricao()};
            dtm.addRow(linha);
        }
        
        
        tblMateriaPrima.setModel(dtm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMateriaPrima = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        comboFornecedor = new javax.swing.JComboBox();
        btnExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Excluir Fornecedor");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        jLabel1.setText("Fornecedor:");

        tblMateriaPrima.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblMateriaPrima);

        jLabel2.setText("Matérias primas fornecidas:");

        comboFornecedor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboFornecedorItemStateChanged(evt);
            }
        });
        comboFornecedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboFornecedorMouseClicked(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboFornecedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode() == VK_ESCAPE){
            this.dispose();
        }
    }//GEN-LAST:event_formKeyReleased

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        Fornecedor fornecedor = lista.get(comboFornecedor.getSelectedIndex());
        boolean valida = false;
        int op = JOptionPane.showConfirmDialog(rootPane, "Tem certeza que deseja excluir o fornecedor "+ fornecedor.getNomeFantasia() + "?");
        if(op == 0)
            try {
                if(listaMateriaPrima.isEmpty())
                    valida = controladorFornecedor.excluir(fornecedor);
                else
                    JOptionPane.showMessageDialog(rootPane, "Impossivel excluir, há matérias primas vinculadas a este fornecedor.");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(UIExcluirFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }     
        if(valida){
            JOptionPane.showMessageDialog(rootPane, "Fornecedor excluido com sucesso!");
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Fornecedor não excluido.");            
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void comboFornecedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboFornecedorMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_comboFornecedorMouseClicked

    private void comboFornecedorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboFornecedorItemStateChanged
        try {
            // TODO add your handling code here:
            listaMateriaPrima = controladorMateriaPrima.consultar(lista.get(comboFornecedor.getSelectedIndex()).getId());
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(UIExcluirFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        String[] columnNames = {"Id",
            "Nome",
            "Fornecedor",
            "Unidade",
            "Valor Unt.",
            "Descrição"};
        Object[][] data = null;
        DefaultTableModel dtm = new DefaultTableModel(data, columnNames);
        
         
        int n = listaMateriaPrima.size();
        for(int i=0; i<n; i++){
            Object[] linha = {listaMateriaPrima.get(i).getId().toString(), 
                              listaMateriaPrima.get(i).getNome(), 
                              listaMateriaPrima.get(i).getFornecedor().getRazaoSocial(),
                              listaMateriaPrima.get(i).getUnd(),
                              listaMateriaPrima.get(i).getValorUnd(),
                              listaMateriaPrima.get(i).getDescricao()};
            dtm.addRow(linha);
        }
        
        
        tblMateriaPrima.setModel(dtm);
    }//GEN-LAST:event_comboFornecedorItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UIExcluirFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UIExcluirFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UIExcluirFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UIExcluirFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new UIExcluirFornecedor().setVisible(true);
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(UIExcluirFornecedor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcluir;
    private javax.swing.JComboBox comboFornecedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMateriaPrima;
    // End of variables declaration//GEN-END:variables
}
